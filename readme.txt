1. The variables explored using this script are the mean and standarded caluculated deviation from the "Human Activity Recognition Using Smartphones Data Set". This data was accessed from https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
on January 7, 2019. It was unzipped using 7zip directly into the project folder. The unzipped folder was renamed to be simply "data". Then it was processed in R 3.5.1 using Rstudio 1.1.463. The packages "data.table" and "dplyr" (and their dependencies) were used to process this data.

meansandstds:
This data frame has all recorded values for the selected variables.
The variables of the measurements are all labeled explicitly by what they are measuring. These occupy columns 1 through 86. Additionally there is one column(subject) that gives the subject on who the measurements were taken and an additional column(activitylabel) that tells what activity the subject was engaged in when the measurement was taken. 

groupedmeans:
This dataframe has grouped the data by the subject and activity, then found the mean of each variable for the respective grouping.
The variable names are all identical to the previous dataframe. However, bear in mind that the values found under them represent the respective mean rather than an individual measurement.

Processing:
The data comes as a folder of files, each keeping either measurements or labeling for the measurements. Additionally the data has been broken into two sets, one to be used for "training" and another for testing. However, we wanted information on all of the values, therefore the data had to be combined.
To start with, fread was used to read in the txt files containing the activity labels, both data sets, both data sets activity ids and both sets subject numbers. fread was used as the data sets were quite large. After reading in the data, the subject number and activity ids were added to their respective tables. As they each have one value in each row corresponding to an individual row of the data, they were added by simply assigning a column in the dataframe to the read-in file. Additionally, at this point a column in each data frame was assigned to the name of the respective data set, in-case the sets needed to be seperated back out in the future. Once subjects and activity ids are added to each set, the sets are combined using rbind. Then labels for the activity are added by left joining the 'alldata' dataframe and the dataframe containing the labels on the the 'activityid' variable. All dataframes, except for the 'alldata' frame, are removed to save memory space. Then the features.txt file is read in and used to add labels to each of the measurement variables. The names were also processed at this point to only contain lower case, alphanumeric characters for easier reading and typing. The dataframes used for this are now removed. Now, the data is subsetted to remove what the dplyr package percieves as 'duplicated' columns(These are not really duplicated but can be removed anyways as none of them are of interest to us). Then dplyr select is used to select the subject, the activity, and all of the variables that display the mean or standard deviation of of any measurement. This produces the data we are looking for, returning 'meansandstds'. To create the dataframe displaying the mean of each variable by activity and subject, the data is first grouped using the dplyr::group_by function, then dplyr::summarize_all is used to find the mean for all columns.